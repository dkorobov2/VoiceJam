apply plugin: 'com.android.model.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def superpowered_sdk_path = properties.getProperty('superpowered.dir')
def ziplib_sdk_path = properties.getProperty('ziplib.dir')

model {
    repositories {
        libs(PrebuiltLibraries) {
            superpowered {
                headers.srcDir "${superpowered_sdk_path}"
                binaries.withType(StaticLibraryBinary) { // attaching library files to each platform
                    def platformName = targetPlatform.getName()
                    if (platformName == "armeabi-v7a") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidarmeabi-v7a.a")
                    } else if (platformName == "arm64-v8a") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidarm64-v8a.a")
                    } else if (platformName == "x86") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidx86.a")
                    } else if (platformName == "x86_64") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidx86_64.a")
                    }
                }
            }
        }
    }

    android { // main settings for your application
        compileSdkVersion = 23
        buildToolsVersion = "25.0.0"
        defaultConfig {
            applicationId 'com.superpowered.voicejam'
            minSdkVersion.apiLevel 16 // more than 95% of all active Android devices
            targetSdkVersion.apiLevel 23
            versionCode 1
            versionName "1.0"
        }
    }
            android.ndk {
                moduleName "PitchDetector"
                platformVersion "16"
                //stl = "c++_static"
                //toolchain "clang"
                CFlags.addAll(["-O3", "-fsigned-char"])
                // full optimization, char data type is signed
                cppFlags.addAll(["-fsigned-char", "-I${superpowered_sdk_path}".toString()])
                ldLibs.addAll(["log", "android", "OpenSLES", "z"])
                // load these libraries: log, android, OpenSL ES (for audio)
                //abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                abiFilters.addAll(["armeabi-v7a", "arm64-v8a", "x86", "x86_64"])
                // these platforms cover 99% percent of all Android devices
                //stl "stlport_static"
                stl "gnustl_static"
            }



    // Configures source set directory.
    android.sources {
        main {
            jni {
                source {
                    srcDir "jni"
                    srcDir "${superpowered_sdk_path}/AndroidIO"
                }

                dependencies {
                    library "superpowered" linkage "static"
                    //library "libzip" linkage "static"
                }
            }
        }
    }

}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:23.4.0"
}